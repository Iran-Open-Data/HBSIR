
ANCHORS:

  common_expenditure_order: &common_expenditure_order
    1363:
      - Year
      - ID
      - Table_Name
      - Commodity_Code
      - Provision_Method
      - Duration: int
      - Expenditure
    1369:
      - Year
      - ID
      - Table_Name
      - Commodity_Code
      - Provision_Method
      - Price_System
      - Amount
      - Duration: int
      - Expenditure
    1370:
      - Year
      - ID
      - Table_Name
      - Commodity_Code
      - Provision_Method
      - Price_System
      - Duration: int
      - Expenditure
    1374:
      - Year
      - ID
      - Table_Name
      - Commodity_Code
      - Provision_Method
      - Duration: int
      - Expenditure


household_information:

  instructions:

    - add_year

    - dropna: ID

    - apply_function:
        1387: hbsir.schema_functions.standard_tables.adjust_month
        1400: null

    - apply_function:
        1387: hbsir.schema_functions.standard_tables.create_season_number
        1396: null

    - apply_function: hbsir.schema_functions.standard_tables.season_name

    - apply_function:
        1387: hbsir.api.add_weight
        1396: null

    - apply_order:
        1387:
          - Year
          - ID
          - Month
          - Season_Number
          - Season
          - Weight
          - Household_Type
          - Main_Household
          - Alternative_Household
        1400:
          - Year
          - ID
          - Season_Number
          - Season
          - Weight
          - Household_Type
          - Main_Household
          - Alternative_Household


Season:

  table_list:
    1363:
      - old_rural_house_specifications
      - old_urban_house_specifications
    1369:
      - house_specifications
    1387:
      - household_information

  instructions:

    - add_attribute:
        1363:
          name: Season
          aspects: [name, season_number]
          column_names: [Season, Season_Number]
        1387: null

    - create_column:
        1363:
          name: Season
          type: categorical
          categories:
            Spring: Spring
            Summer: Summer
            Autumn: Autumn
            Winter: Winter
        1387: null

    - apply_order:
      - Year
      - ID
      - Season_Number
      - Season


CPI_Quarterly:
  table_list:
    - Season
    - external.sci.cpi.quarterly

  concat_options:
    left_on: [Year, Season_Number]
    right_on: [Year, Season]
    how: left

  instructions:

    - rename: {CPI: CPI_Quarterly}

    - apply_order:
      - Year
      - ID
      - CPI_Quarterly


CPI_Annual:
  table_list:
    - Season
    - external.sci.cpi.annual

  concat_options:
    merge_on: [Year]
    how: left

  instructions:

    - rename: {CPI: CPI_Annual}

    - apply_order:
      - Year
      - ID
      - CPI_Annual


CPI:
  table_list:
    - CPI_Annual
    - CPI_Quarterly
  
  concat_options:
    on_columns: [Year, ID]
  
  instructions:

    - apply_order:
      - Year
      - ID
      - CPI_Annual
      - CPI_Quarterly


Administrative_Divisions:

  table_list:
    1363:
      - old_rural_house_specifications
      - old_urban_house_specifications
    1369:
      - house_specifications
    1387:
      - household_information

  instructions:

    - add_attribute:
        name: Urban_Rural
        aspects: [code, name]
        column_names: [Urban_Rural_Code, Urban_Rural_Name]

    - apply_pandas_function: >
        .assign(Urban_Rural_Code=self.table["Urban_Rural_Code"].astype("str"))

    - add_attribute:
        name: Province
        aspects: [code, name]
        column_names: [Province_Code, Province_Name]

    - apply_pandas_function: >
        .assign(
          Province_Code =
          self.table["Province_Code"]
          .astype("float")
          .fillna(-1)
          .astype("int")
          .astype("str")
          .str.pad(2, "left", "0")
          .replace("-1", None)
        )

    - add_attribute:
        1377:
          name: County
          aspects: [code, name]
          column_names: [County_Code, County_Name]

    - apply_pandas_function:
        1377: >
          .assign(
            County_Code =
            self.table["County_Code"]
            .astype("float")
            .fillna(-1)
            .astype("int")
            .astype("str")
            .str.pad(4, "left", "0")
            .replace("00-1", None)
          )

    - apply_order:
        1363:
          - Year
          - ID
          - Urban_Rural_Code
          - Urban_Rural_Name
          - Province_Code
          - Province_Name
        1377:
          - Year
          - ID
          - Urban_Rural_Code
          - Urban_Rural_Name
          - Province_Code
          - Province_Name
          - County_Code
          - County_Name


# census_month:

#   instructions:

#     - add_year

#     - dropna: ID


house_specifications:

  instructions:

    - add_year

    - dropna: ID


old_rural_house_specifications:

  instructions:

    - add_year

    - dropna: ID


old_urban_house_specifications:

  instructions:

    - add_year

    - dropna: ID


members_properties:

  instructions:

    - add_year

    - dropna: ID

    - apply_order:
        1363:
          - Year: Int16
          - ID: UInt64
          - Member_Number: Int8
          - Relationship
          - Sex
          - Age: Int16
          - Nationality
          - Literacy_Status
          - Education_Level
          - Marital_Status
          - Activity_Status
          - Occupation_Code
          - Work_Place
          - Work_Type
          - Weeks_in_Employment
        1366:
          - Year: Int16
          - ID: UInt64
          - Member_Number: Int8
          - Relationship
          - Sex
          - Age: Int16
          - Literacy_Status
          - Activity_Status
          - Education_Level
          - Occupation_Code
          - Work_Place
          - Work_Type
          - Weeks_in_Employment
        1369:
          - Year: Int16
          - ID: UInt64
          - Member_Number: Int8
          - Relationship
          - Sex
          - Age: Int16
          - Is_Literate
          - Is_Student
          - Education_Level
          - Marital_Status
          - Activity_Status


Number_of_Members:

  table_list:
    members_properties

  instructions:

    - apply_function: hbsir.schema_functions.standard_tables.number_of_members

    - apply_order:
      - Year
      - ID
      - Members
      - Adults
      - Childs


Adult_Equivalent_Scale:

  table_list:
    members_properties

  instructions:

    - apply_function: hbsir.schema_functions.calorie_requirements.calorie_based_equivalence_scale

    - apply_order:
      - Year
      - ID
      - Adult_Equivalent_Scale_NNFTRI


Equivalence_Scale:

  table_list:
    Number_of_Members

  instructions:

    - apply_function: hbsir.schema_functions.standard_tables.equivalence_scale

    - apply_order:
      - Year
      - ID
      - Household
      - Per_Capita
      - Family_Size
      - OECD
      - OECD_Modified
      - Square_Root


food:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        1363:
          name: Price_System
          type: categorical
          categories:
            Free_Price:       {Provision_Method: Purchase_Free_Price}
            Subsidised_Price: {Provision_Method: Purchase_Subsidised_Price}
        1369: null

    - create_column:
        1363:
          name: Provision_Method
          type: categorical
          categories:
            Purchase: [Purchase_Free_Price, Purchase_Subsidised_Price]
            Agricultural_Work: Agricultural_Work
            Donation: Donation
            Instead_of_Public_Service: Instead_of_Public_Service
            Home_Production: Home_Production
            Non_Agricultural_Work: Non_Agricultural_Work
            Instead_of_Private_Service: Instead_of_Private_Service
        1369: null

    - rename:
        1363: {Kilos: Amount}
        1369: null
        1370: {Kilos: Amount}
        1371: null

    - apply_function: 
        1369: hbsir.schema_functions.standard_tables.calculate_amount_before_1382
        1370: null
        1371: hbsir.schema_functions.standard_tables.calculate_amount_before_1382
        1383: hbsir.schema_functions.standard_tables.calculate_amount_after_1383

    - create_column:
        1363: null
        1369:
          name: Duration
          type: numerical
          expression: 30

    - create_column:
        1363:
          name: Price
          type: numerical
          expression: "Expenditure / Amount"
        1369: null
        1370:
          name: Price
          type: numerical
          expression: "Expenditure / Amount"
        1372: null

    - apply_pandas_function: >
        .assign(Price=self.table["Price"].replace(0, None))

    - add_classification:
        1363: {target: Commodity_Code, name: Duration}
        1369: null

    - apply_filter:
        1363: null
        1364: "Commodity_Code not in [18888, 19993]"
        1365: "Commodity_Code not in [18888]"
        1366: "Commodity_Code not in [18888, 19993, 91112, 91124, 91142, 91171, 91197]"
        1367: null

    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Duration: int
          - Price
          - Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Amount
          - Duration: int
          - Price
          - Expenditure


tobacco:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order:
      - Year
      - ID
      - Table_Name
      - Commodity_Code
      - Provision_Method
      - Amount
      - Duration: int
      - Price
      - Expenditure


cloth:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


home:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
        1369:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Duration: int
          - Expenditure
        1370:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Duration: int
          - Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
        1384:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Security_Deposit


furniture:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


medical:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


transportation:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


communication:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


entertainment:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


education:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


hotel:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


miscellaneous:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 30

    - apply_order: *common_expenditure_order


durable:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 360

    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1369:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1370:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Secondhand_Sale


investment:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name

    - create_column:
        name: Duration
        type: numerical
        expression: 360

    - apply_order:
        1366:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Duration: int
          - Expenditure
        1367:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1369:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1370:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Secondhand_Sale
        1375: null
        1378:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Duration: int
          - Expenditure
          - Secondhand_Sale


Weight:

  table_list:
    1371:
      - house_specifications
    1376:
      - external.hbsir_weights
    1396:
      - household_information

  instructions:

    - apply_function:
        1371: hbsir.schema_functions.weight.calculate_weight
        1376: null

    - filter_year

    - apply_order:
      - Year
      - ID
      - Weight


Original_Expenditures:

  table_list:
    1363:
      - food
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - entertainment
      - miscellaneous
      - durable

    1383:
      - food
      - tobacco
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - communication
      - entertainment
      - education
      - hotel
      - miscellaneous
      - durable

  instructions:

    - fillna: [Expenditure, Secondhand_Sale]

    - create_column:
        name: Gross_Expenditure
        type: numerical
        expression: "Expenditure"

    - create_column:
        name: Net_Expenditure
        type: numerical
        expression: "Expenditure - Secondhand_Sale"

    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Duration: int
          - Price
          - Gross_Expenditure
          - Net_Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Amount
          - Duration: int
          - Price
          - Gross_Expenditure
          - Net_Expenditure


Expenditures:

  table_list:
    - Original_Expenditures

  instructions:
    - create_column:
        name: Amount
        type: numerical
        expression: "Amount / Duration * 360"

    - apply_pandas_function: >
        .assign(Amount=self.table["Amount"].replace(0, None))

    - create_column:
        name: Gross_Expenditure
        type: numerical
        expression: "Gross_Expenditure / Duration * 360"

    - create_column:
        name: Net_Expenditure
        type: numerical
        expression: "Net_Expenditure / Duration * 360"
        
    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Price
          - Gross_Expenditure
          - Net_Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Amount
          - Price
          - Gross_Expenditure
          - Net_Expenditure


Total_Expenditure:

  table_list:
    - Expenditures

  instructions:

    - apply_pandas_function: >
        .groupby(["Year", "ID"], as_index=False)
        [["Gross_Expenditure", "Net_Expenditure"]].sum()

    - apply_order:
      - Year
      - ID
      - Gross_Expenditure
      - Net_Expenditure

  cache_result: true


Expenditure_Breakdown:

  table_list:
    - Expenditures


# Expenditures and Investments
Original_Outlays:

  table_list:
    1363:
      - food
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - entertainment
      - miscellaneous
      - durable

    1366:
      - food
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - entertainment
      - miscellaneous
      - durable
      - investment
    
    1375:
      - food
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - entertainment
      - miscellaneous
      - durable

    1378:
      - food
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - entertainment
      - miscellaneous
      - durable
      - investment

    1383:
      - food
      - tobacco
      - cloth
      - home
      - furniture
      - medical
      - transportation
      - communication
      - entertainment
      - education
      - hotel
      - miscellaneous
      - durable
      - investment

  instructions:
    - create_column:
        name: Gross_Expenditure
        type: numerical
        expression: "Expenditure"

    - create_column:
        name: Net_Expenditure
        type: numerical
        expression: "Expenditure - Secondhand_Sale"

    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Duration: int
          - Price
          - Gross_Expenditure
          - Net_Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Amount
          - Duration: int
          - Price
          - Gross_Expenditure
          - Net_Expenditure


Outlays:

  table_list:
    - Original_Outlays

  instructions:
    - create_column:
        name: Gross_Expenditure
        type: numerical
        expression: "Gross_Expenditure / Duration * 360"

    - create_column:
        name: Net_Expenditure
        type: numerical
        expression: "Net_Expenditure / Duration * 360"
        
    - apply_order:
        1363:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Price_System
          - Amount
          - Price
          - Gross_Expenditure
          - Net_Expenditure
        1374:
          - Year
          - ID
          - Table_Name
          - Commodity_Code
          - Provision_Method
          - Amount
          - Price
          - Gross_Expenditure
          - Net_Expenditure


Total_Outlay:

  table_list:
    - Outlays

  instructions:

    - apply_pandas_function: >
        .groupby(["Year", "ID"], as_index=False)
        [["Gross_Expenditure", "Net_Expenditure"]].sum()

    - apply_order:
      - Year
      - ID
      - Gross_Expenditure
      - Net_Expenditure

  cache_result: true


employment_income:

  instructions:

    - add_year

    - add_table_name

    - apply_filter:
        1389: ID != 1130032060
        1390: null


self_employed_income:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name


other_income:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name


_long_other_income:
  table_list:
    - other_income

  instructions:

    - apply_pandas_function: >
        .drop(columns=['Table_Name'])
        .set_index(['Year', 'ID', 'Member_Number'])
        .stack()
        .to_frame()
        .reset_index()
        .set_axis(['Year', 'ID', 'Member_Number', 'Type', 'Value'], axis='columns')

    - create_column:
        name: Other_Incomes
        type: numerical
        expression: Value

    - create_column:
        name: Other_Income_Type
        type: categorical
        categories:
          Retirement:        {Type: Retirement}
          Rent:              {Type: Rent}
          Interest:          {Type: Interest}
          Aid:               {Type: Aid}
          Home_Production:   {Type: Home_Production}
          Transfer:          {Type: Transfer}

    - apply_filter: "Other_Incomes > 0"

    - apply_order:
      - Year
      - ID
      - Member_Number
      - Other_Incomes: float
      - Other_Income_Type


subsidy:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name


public_employment_income:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name


private_employment_income:

  instructions:

    - add_year

    - dropna: ID

    - add_table_name


Imputed_Rent:

  table_list:
    - home

  instructions:

    - add_classification:
        target: Commodity_Code
        name: Imputed_Rent

    - apply_filter: "Imputed_Rent.notnull() & (Provision_Method.isnull() or Provision_Method == 'Purchase')"

    - create_column:
        name: Income
        type: numerical
        expression: "Expenditure * 12"

    - create_column:
        name: Income_Type
        type: categorical
        categories:
          NonCash_ImputedRent_Ownership: {Imputed_Rent: Ownership}
          NonCash_ImputedRent_Mortgage: {Imputed_Rent: Mortgage}

    - apply_order:
      - Year
      - ID
      - Income_Type
      - Income


NonCash_Incomes_Excluding_Imputed_Rent:

  table_list:
    - Expenditures

  instructions:

    - create_column:
        name: Income
        type: numerical
        expression: "Net_Expenditure"

    - create_column:
        name: Income_Type
        type: categorical
        categories:
          NonCash_Private:          {Provision_Method: Instead_of_Private_Service}
          NonCash_Public:           {Provision_Method: Instead_of_Public_Service}
          NonCash_Cooperative:      {Provision_Method: Instead_of_Cooperative_Service}
          NonCash_Agricultural:     {Provision_Method: Agricultural_Work}
          NonCash_NonAgricultural:  {Provision_Method: Non_Agricultural_Work}
          NonCash_Donation:         {Provision_Method: Donation}   
          NonCash_HomeProduction:   {Provision_Method: Home_Production}   

    - apply_filter: "(Provision_Method != 'Purchase') & Provision_Method.notnull()"

    - apply_order:
      - Year
      - ID
      - Income_Type
      - Income


NonCash_Incomes:

  table_list:
    - Imputed_Rent
    - NonCash_Incomes_Excluding_Imputed_Rent

  instructions:

    - apply_order:
      - Year
      - ID
      - Income_Type
      - Income


Cash_Incomes:

  table_list:
    1369:
      - employment_income
      - self_employed_income
      - _long_other_income
    1390:
      - employment_income
      - self_employed_income
      - _long_other_income
      - subsidy

  instructions:

    - fillna:
        1369: [Annual_Net_Income, Profit, Other_Incomes]
        1390: [Annual_Net_Income, Profit, Other_Incomes, Subsidy]

    - create_column:
        name: Income
        type: numerical
        expression:
          1363: "Annual_Net_Income + Profit + Other_Incomes"
          1390: "Annual_Net_Income + Profit + Other_Incomes + Subsidy"

    - create_column:
        name: Income_Type
        type: categorical
        categories:
          Cash_Public:              {Table_Name: employment_income, Sector: Public}
          Cash_Private:             {Table_Name: employment_income, Sector: Private}
          Cash_Cooperative:         {Table_Name: employment_income, Sector: Cooperative}
          Cash_Agricultural:        {Table_Name: self_employed_income, Is_Agricultural: true}
          Cash_NonAgricultural:     {Table_Name: self_employed_income, Is_Agricultural: false}
          Cash_Retirement:          {Other_Income_Type: Retirement}
          Cash_Rent:                {Other_Income_Type: Rent}
          Cash_Interest:            {Other_Income_Type: Interest}
          Cash_Aid:                 {Other_Income_Type: Aid}
          Cash_Home_Production:     {Other_Income_Type: Home_Production}
          Cash_Transfer:            {Other_Income_Type: Transfer}
          Cash_Subsidy:             {Table_Name: subsidy}

    - apply_order:
      - Year
      - ID
      - Member_Number
      - Income_Type
      - Income


Income_Breakdown:
  table_list:
    - NonCash_Incomes
    - Cash_Incomes

  instructions:

    - apply_pandas_function: >
        .groupby(["Year", "ID", "Income_Type"], as_index=False)["Income"].sum()

    - apply_order:
      - Year
      - ID
      - Income_Type
      - Income

  cache_result: true


Total_Income:
  table_list:
    - Income_Breakdown

  instructions:

    - apply_pandas_function: >
        .groupby(["Year", "ID"], as_index=False).sum(numeric_only=True)

    - apply_order:
      - Year
      - ID
      - Income

  cache_result: true


Members_Income_Breakdown:

  table_list:
    - Cash_Incomes

  instructions:

    - apply_pandas_function: >
        .groupby(
          ["Year", "ID", "Member_Number", "Income_Type"],
          as_index=False,
          observed=True
        )
        .sum()

    - apply_order:
      - Year
      - ID
      - Member_Number
      - Income_Type
      - Income


Members_Total_Income:

  table_list:
    - Members_Income_Breakdown

  instructions:

    - apply_pandas_function: >
        .groupby(["Year", "ID", "Member_Number"], as_index=False).sum(numeric_only=True)

    - apply_order:
      - Year
      - ID
      - Member_Number
      - Income

  cache_result: true
